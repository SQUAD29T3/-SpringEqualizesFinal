package br.com.equalizes.controller;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;

import br.com.equalizes.model.Contato;
import br.com.equalizes.repository.ContatoRepository;

@Controller
public class ContatoController {
	
	@Autowired
	private ContatoRepository contatoRepository;
	
	
	// === CADASTRO DE SOLICITAÇÕES DE CONTATO

	// CHAMA A VIEW CADASTRAR E PASSA UM OBJETO VAZIO
	@GetMapping("/contato")
	public ModelAndView solicitacaoContato() {
		ModelAndView modelAndView = new ModelAndView("site/contato");
		modelAndView.addObject("contatos", new Contato());
		return modelAndView;
	}

	@PostMapping("/contato")
	public ModelAndView solicitacaoContato(Contato contatos) throws IOException {

		ModelAndView modelAndView = new ModelAndView("redirect:/solicitacaoContatoSucesso");
		contatoRepository.save(contatos);
		return modelAndView;
	}

	
	// VIEW COM CONFIRMAÇÃO DE ENVIO DA SOLICITAÇÃO
	@GetMapping("/solicitacaoContatoSucesso")
	public String contatoSucesso() {
		return "success/success-contato";
	}
	
	
	// VIEW COM CONFIRMAÇÃO DE ENVIO DA SOLICITAÇÃO
	@GetMapping("/listarContatos")
	public String listarContatos() {
		
		
		return "admin/contato/listar";
	}
	
	
	@GetMapping("/listarContatos")
	public ModelAndView llistarContatos() {
		ModelAndView modelAndView = new ModelAndView("admin/contato/listar");

		List<Cargo> cargos = cargoRepository.findAll();
		modelAndView.addObject("cargos", cargos);

		return modelAndView;
	}
	
	

}
